Поиск по условию

Конспект урока
Регулярные выражения поддерживают поиск по условию. Пожалуй, это одна из самых сложных конструкций, которая существует в регулярных выражениях и не поддерживается в JavaScript, и многих других языках программирования. В некоторых языках нужно учитывать особенности его реализации: Python поддерживает условный поиск с использованием группировки с обратной связью или именованных групп.

Она напоминает тернарный оператор из языков программирования и выглядит следующим образом: (?ifthen|else).

Рассмотрим ее работу на таком примере:

/(?(?<=a)m|p)/

mam,pap

Мы видим внешние скобки с ?, а внутри — два отдельных выражения:

Первое — это условие (?<=a), которое проверяет, соответствует ли символ слева a.
Дальше идет альтернатива, и мы выбираем между m и p в зависимости от того, сработало условие или нет.
Можно описать эту конструкцию так: «Найти все m перед которыми идет a или p, перед которыми a нет».

Давайте разберем поиск в нашей строке посимвольно:

выполняется проверка условия — является ли текущий символ m и стоит ли перед ним a. Поскольку условие не выполнилось, происходит попытка извлечь p, что также не является текущим символом;
второй символ a не подходит под условия, пропущенная подстрока ma, далее проверяется m,pap;
третий символ m соответствует m, ранее была a — найдено первое сопоставление;
четвертый символ , не подходит под условия, пропущенная подстрока mam,, далее проверяется pap;
пятый символ p не соответствует am, но соответствует p — найдено второе сопоставление;
шестой символ a снова запускает проверку следующего символа на соответствие m;
седьмой символ p проваливает проверку на соответствие m.
Вот так в результате условного поиска у нас было найдено два совпадения в строке.
